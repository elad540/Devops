credentials:
  system:
    domainCredentials:
    - credentials:
      - string:
          id: "AWS_ACCESS_KEY_ID"
          scope: GLOBAL
          secret: "{AQAAABAAAAAg7kyUsiI2iWVRsoLwVJ1cTDiYFqUOOmMpauaSHVlZXsXT3cHaU6BtEpxvfHwxgWzN}"
      - string:
          id: "AWS_SECRET_ACCESS_KEY"
          scope: GLOBAL
          secret: "{AQAAABAAAAAwnJ46msl/w+iDbUnf7/WUIhD+YJkhNS1EFyeSyRn6VNqFT2n99fx5xhr6PBdKG9ckjFmp/pQ4z6Bfwj/udJhZFA==}"
jenkins:
  agentProtocols:
  - "JNLP4-connect"
  - "Ping"
  authorizationStrategy:
    loggedInUsersCanDoAnything:
      allowAnonymousRead: false
  clouds:
  - kubernetes:
      containerCap: 10
      containerCapStr: "10"
      jenkinsTunnel: ":30002"
      jenkinsUrl: "http://192.168.49.2:32000/"
      name: "kubernetes"
      namespace: "jenkins"
      templates:
      - id: "7f160a27-f453-4358-afb6-2e8879fb72e7"
        name: "jenkins_worker"
        namespace: "jenkins"
        yaml: |2-
           apiVersion: v1
                  kind: Pod
                  spec:
                    containers:
                    - name: docker
                      image: shaharco1804/score_flask:latest
                      command:
                      - cat
                      tty: true
                      volumeMounts:
                       - mountPath: /var/run/docker.sock
                         name: docker-sock
                    volumes:
                    - name: docker-sock
                      hostPath:
                        path: /var/run/docker.sock
        yamlMergeStrategy: "override"
        yamls:
        - |2-
           apiVersion: v1
                  kind: Pod
                  spec:
                    containers:
                    - name: docker
                      image: shaharco1804/score_flask:latest
                      command:
                      - cat
                      tty: true
                      volumeMounts:
                       - mountPath: /var/run/docker.sock
                         name: docker-sock
                    volumes:
                    - name: docker-sock
                      hostPath:
                        path: /var/run/docker.sock
  crumbIssuer:
    standard:
      excludeClientIPFromCrumb: false
  disableRememberMe: false
  labelAtoms:
  - name: "built-in"
  markupFormatter: "plainText"
  mode: NORMAL
  myViewsTabBar: "standard"
  numExecutors: 0
  primaryView:
    all:
      name: "all"
  projectNamingStrategy: "standard"
  quietPeriod: 5
  remotingSecurity:
    enabled: true
  scmCheckoutRetryCount: 0
  securityRealm:
    local:
      allowsSignup: false
      enableCaptcha: false
      users:
      - id: "shahar"
        name: "shahar cohen"
        properties:
        - favoriting:
            autofavoriteEnabled: true
        - "favorite"
        - "myView"
        - preferredProvider:
            providerId: "default"
        - "timezone"
        - mailer:
            emailAddress: "shaharco1804@gmail.com"
        - "apiToken"
  slaveAgentPort: 50000
  updateCenter:
    sites:
    - id: "default"
      url: "https://updates.jenkins.io/update-center.json"
  views:
  - all:
      name: "all"
  viewsTabBar: "standard"
globalCredentialsConfiguration:
  configuration:
    providerFilter: "none"
    typeFilter: "none"
security:
  apiToken:
    creationOfLegacyTokenEnabled: false
    tokenGenerationOnCreationEnabled: false
    usageStatisticsEnabled: true
  gitHooks:
    allowedOnAgents: false
    allowedOnController: false
  gitHostKeyVerificationConfiguration:
    sshHostKeyVerificationStrategy: "knownHostsFileVerificationStrategy"
  sSHD:
    port: -1
unclassified:
  bitbucketEndpointConfiguration:
    endpoints:
    - bitbucketCloudEndpoint:
        enableCache: false
        manageHooks: false
        repositoriesCacheDuration: 0
        teamCacheDuration: 0
  buildDiscarders:
    configuredBuildDiscarders:
    - "jobBuildDiscarder"
  buildStepOperation:
    enabled: false
  email-ext:
    adminRequiredForTemplateTesting: false
    allowUnregisteredEnabled: false
    charset: "UTF-8"
    debugMode: false
    defaultBody: |-
      $PROJECT_NAME - Build # $BUILD_NUMBER - $BUILD_STATUS:

      Check console output at $BUILD_URL to view the results.
    defaultContentType: "text/plain"
    defaultSubject: "$PROJECT_NAME - Build # $BUILD_NUMBER - $BUILD_STATUS!"
    defaultTriggerIds:
    - "hudson.plugins.emailext.plugins.trigger.FailureTrigger"
    maxAttachmentSize: -1
    maxAttachmentSizeMb: -1
    precedenceBulk: false
    watchingEnabled: false
  fingerprints:
    fingerprintCleanupDisabled: false
    storage: "file"
  gitHubConfiguration:
    apiRateLimitChecker: ThrottleForNormalize
  gitHubPluginConfig:
    hookUrl: "http://192.168.49.2:32000/github-webhook/"
  gitSCM:
    addGitTagAction: false
    allowSecondFetch: false
    createAccountBasedOnEmail: false
    disableGitToolChooser: false
    hideCredentials: false
    showEntireCommitSummaryInChanges: false
    useExistingAccountWithSameEmail: false
  globalTimeOutConfiguration:
    operations:
    - "abortOperation"
    overwriteable: false
  injectionConfig:
    allowUntrusted: false
    enabled: false
    injectCcudExtension: false
    injectMavenExtension: false
  junitTestResultStorage:
    storage: "file"
  locale:
    ignoreAcceptLanguage: true
    systemLocale: "english"
  location:
    adminAddress: "address not configured yet <nobody@nowhere>"
    url: "http://192.168.49.2:32000/"
  mailer:
    charset: "UTF-8"
    useSsl: false
    useTls: false
  pollSCM:
    pollingThreadCount: 10
  timestamper:
    allPipelines: false
    elapsedTimeFormat: "'<b>'HH:mm:ss.S'</b> '"
    systemTimeFormat: "'<b>'HH:mm:ss'</b> '"
tool:
  dockerTool:
    installations:
    - name: "docker"
      properties:
      - installSource:
          installers:
          - fromDocker:
              version: "latest"
  git:
    installations:
    - home: "git"
      name: "Default"
  mavenGlobalConfig:
    globalSettingsProvider: "standard"
    settingsProvider: "standard"
  terraform:
    installations:
    - name: "terraform"
      properties:
      - installSource:
          installers:
          - terraformInstaller:
              id: "21109-linux-amd64"